# ============================================================================
# Cortex 3.x Configuration
# ============================================================================

# Secret key for Play Framework
play.http.secret.key = "${APPLICATION_SECRET:-CortexTestPassword}"

# Cluster configuration
akka {
  cluster.enable = on
  actor {
    provider = cluster
  }
  remote.artery {
    canonical {
      hostname = "127.0.0.1"
      port = 2552
    }
  }
}

# Analyzer configuration
analyzer {
  # Analyzer directory
  path = [
    "/opt/cortex/analyzers"
  ]

  # Analyzer fork configuration
  fork-join-executor {
    # Min number of threads
    parallelism-min = 2
    # Max number of threads
    parallelism-max = 4
  }
}

# Responder configuration
responder {
  # Responder directory
  path = [
    "/opt/cortex/responders"
  ]

  # Responder fork configuration
  fork-join-executor {
    parallelism-min = 2
    parallelism-max = 4
  }
}

# Database configuration (Cassandra)
db {
  provider = janusgraph
  janusgraph {
    storage {
      backend = cql
      hostname = ["cassandra"]
      port = 9042
      cql {
        cluster-name = SOARCluster
        keyspace = cortex
      }
    }
    index.search {
      backend = lucene
      directory = /opt/cortex/index
    }
  }
}

# Authentication
auth {
  # Authentication provider
  provider = [local]
  # provider = [local, ldap, oauth2]

  # LDAP configuration (if enabled)
  # ldap {
  #   serverName = "ldap.example.com"
  #   serverNames = ["ldap1.example.com", "ldap2.example.com"]
  #   bindDN = "cn=admin,dc=example,dc=com"
  #   bindPW = "password"
  #   baseDN = "ou=users,dc=example,dc=com"
  #   filter = "(uid={0})"
  # }

  # OAuth2 configuration (if enabled)
  # oauth2 {
  #   clientId = "CLIENT_ID"
  #   clientSecret = "CLIENT_SECRET"
  #   redirectUri = "https://cortex.example.com/api/ssoLogin"
  #   authorizeUrl = "https://oauth.example.com/authorize"
  #   tokenUrl = "https://oauth.example.com/token"
  #   userUrl = "https://oauth.example.com/user"
  # }
}

# HTTP server configuration
http {
  address = 0.0.0.0
  port = 9001
}

# Job configuration
job {
  # Job runner class
  runner = [docker, process]

  # Docker configuration
  docker {
    # Docker auto update
    autoUpdate = false
    # Docker registry
    registry = "docker.io"
    # Docker user
    user = "cortexneurons"
    # Docker version tag
    version = "latest"
  }

  # Job timeout (in seconds)
  timeout = 300

  # Job cache configuration
  cache {
    # Cache duration (in seconds)
    ttl = 5m
  }
}

# Streaming configuration
stream.longPolling {
  refresh = 10 seconds
  cache = 15 seconds
}

# Metrics
metrics {
  name = cortex
  enabled = true
  rateUnit = SECONDS
  durationUnit = SECONDS
  showSamples = false
  jvm = true
  logback = true
}

# Maximum file upload size
play.http.parser.maxDiskBuffer = 1G
play.http.parser.maxMemoryBuffer = 10M
