# ============================================================================
# TheHive 5.x Configuration
# ============================================================================

# Service configuration
play.http.secret.key = "${APPLICATION_SECRET:-ThehiveTestPassword}"

# Cluster configuration
akka {
  cluster {
    enable = on
    min-nr-of-members = 1
  }
  actor {
    provider = cluster
  }
  remote.artery {
    canonical {
      hostname = "127.0.0.1"
      port = 2551
    }
  }
}

# Storage configuration
storage {
  provider = s3
  s3 {
    bucket = "thehive"
    endpoint = "http://minio:9000"
    access-key = "minioadmin"
    secret-key = "minioadmin123"
    region = "us-east-1"
    use-path-access-style = true
  }
}

# Database configuration (Cassandra)
db {
  provider = janusgraph
  janusgraph {
    storage {
      backend = cql
      hostname = ["cassandra"]
      port = 9042
      cql {
        cluster-name = SOARCluster
        keyspace = thehive
      }
    }
    index.search {
      backend = lucene
      directory = /opt/thehive/index
    }
  }
}

# Cortex integration
play.modules.enabled += org.thp.thehive.connector.cortex.CortexModule
cortex {
  servers = [
    {
      name = local
      url = "http://cortex:9001"
      auth {
        type = "bearer"
        key = "${CORTEX_API_KEY}"
      }
      # Proxy settings if needed
      # proxy {
      #   host = proxy.example.com
      #   port = 3128
      # }
    }
  ]
  # Refresh job timeout
  refreshDelay = 1 minute
  maxRetryOnError = 3
  statusCheckInterval = 1 minute
}

# MISP integration (optional)
# play.modules.enabled += org.thp.thehive.connector.misp.MispModule
# misp {
#   interval = 1 hour
#   servers = [
#     {
#       name = "MISP-SERVER"
#       url = "https://misp.example.com"
#       auth {
#         type = key
#         key = "MISP_API_KEY"
#       }
#     }
#   ]
# }

# Authentication
auth {
  providers = [
    {name: local}
    # {name: ldap, host: "ldap://ldap.example.com:389", bindDN: "cn=admin,dc=example,dc=com", bindPW: "password"}
    # {name: oauth2, clientId: "CLIENT_ID", clientSecret: "CLIENT_SECRET", redirectUri: "https://thehive.example.com/api/ssoLogin"}
  ]

  # Default admin user
  defaultUserDomain = "local"

  # Session timeout (in minutes)
  session {
    warning = 5m
    inactivity = 30m
  }
}

# HTTP server configuration
http {
  address = 0.0.0.0
  port = 9000
}

# Stream configuration
stream.longPolling {
  refresh = 10 seconds
  cache = 15 seconds
}

# Notification configuration
notification.webhook.endpoints = [
  {
    name: shuffle
    url: "http://shuffle-backend:5001/api/v1/hooks/webhook"
    version: 0
    wsConfig {}
    includedTheHiveOrganisations = ["*"]
    excludedTheHiveOrganisations = []
  }
]
