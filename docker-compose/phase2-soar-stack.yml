# ============================================================================
# AI-SOC Phase 2: SOAR Stack (Security Orchestration, Automation, Response)
# ============================================================================
# Components:
# - TheHive 5.x: Case management and incident response platform
# - Cortex: Observable analysis and active response
# - Shuffle: Workflow automation and orchestration
# - Cassandra: Backend database for TheHive/Cortex
# - MinIO: S3-compatible storage for artifacts
# ============================================================================

version: '3.8'

services:
  # ============================================================================
  # CASSANDRA DATABASE
  # ============================================================================
  cassandra:
    image: cassandra:4.1.3
    container_name: soar-cassandra
    hostname: cassandra
    restart: unless-stopped

    ports:
      - "9042:9042"
      - "7000:7000"
      - "7001:7001"

    environment:
      - CASSANDRA_CLUSTER_NAME=SOARCluster
      - CASSANDRA_DC=DC1
      - CASSANDRA_RACK=RACK1
      - CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch
      - MAX_HEAP_SIZE=1G
      - HEAP_NEWSIZE=256M
      - CASSANDRA_NUM_TOKENS=128

    volumes:
      - cassandra-data:/var/lib/cassandra

    networks:
      - soar-backend

    healthcheck:
      test: ["CMD-SHELL", "nodetool status || exit 1"]
      interval: 60s
      timeout: 10s
      retries: 5
      start_period: 120s

    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '2.0'
        reservations:
          memory: 1G
          cpus: '1.0'

  # ============================================================================
  # MINIO (S3-compatible storage)
  # ============================================================================
  minio:
    image: minio/minio:RELEASE.2024-01-01T16-36-33Z
    container_name: soar-minio
    hostname: minio
    restart: unless-stopped

    ports:
      - "9000:9000"
      - "9001:9001"

    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER:-minioadmin}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD:-minioadmin123}

    command: server /data --console-address ":9001"

    volumes:
      - minio-data:/data

    networks:
      - soar-backend

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'

  # ============================================================================
  # THEHIVE 5.x
  # ============================================================================
  thehive:
    image: strangebee/thehive:5.2.9
    container_name: soar-thehive
    hostname: thehive
    restart: unless-stopped

    ports:
      - "9010:9000"

    environment:
      - JVM_OPTS=-Xms1g -Xmx2g

    volumes:
      - thehive-data:/opt/thehive/data
      - thehive-index:/opt/thehive/index
      - ../config/thehive/application.conf:/etc/thehive/application.conf:ro

    networks:
      - soar-backend
      - soar-frontend

    depends_on:
      cassandra:
        condition: service_healthy
      minio:
        condition: service_healthy

    command:
      - --no-config
      - --no-config-secret
      - --cql-hostnames
      - cassandra
      - --cql-username
      - cassandra
      - --cql-password
      - cassandra
      - --index-backend
      - lucene
      - --s3-endpoint
      - http://minio:9000
      - --s3-access-key
      - minioadmin
      - --s3-secret-key
      - minioadmin123
      - --s3-bucket
      - thehive
      - --s3-use-path-access-style

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/api/v1/status"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 90s

    deploy:
      resources:
        limits:
          memory: 3G
          cpus: '2.0'
        reservations:
          memory: 1G
          cpus: '1.0'

  # ============================================================================
  # CORTEX (Observable Analysis Engine)
  # ============================================================================
  cortex:
    image: thehiveproject/cortex:3.1.7
    container_name: soar-cortex
    hostname: cortex
    restart: unless-stopped

    ports:
      - "9011:9001"

    environment:
      - JVM_OPTS=-Xms512m -Xmx1g

    volumes:
      - cortex-data:/opt/cortex/data
      - cortex-jobs:/tmp/cortex-jobs
      - ../config/cortex/application.conf:/etc/cortex/application.conf:ro

    networks:
      - soar-backend
      - soar-frontend

    depends_on:
      cassandra:
        condition: service_healthy

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9001/api/status"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '2.0'
        reservations:
          memory: 512M
          cpus: '0.5'

  # ============================================================================
  # SHUFFLE (Workflow Automation)
  # ============================================================================
  shuffle-backend:
    image: ghcr.io/shuffle/shuffle-backend:1.4.0
    container_name: soar-shuffle-backend
    hostname: shuffle-backend
    restart: unless-stopped

    ports:
      - "5001:5001"

    environment:
      - SHUFFLE_APP_HOTLOAD_FOLDER=/shuffle-apps
      - SHUFFLE_FILE_LOCATION=/shuffle-files
      - SHUFFLE_OPENSEARCH_URL=http://opensearch:9200
      - SHUFFLE_ELASTIC=true
      - ORG_ID=Org_${ORG_ID:-default}
      - BACKEND_HOSTNAME=shuffle-backend
      - DATASTORE_EMULATOR_HOST=shuffle-database:8000
      - SHUFFLE_ENCRYPTION_MODIFIER=${SHUFFLE_ENCRYPTION_MODIFIER:-changeme}
      - HTTP_PROXY=
      - HTTPS_PROXY=

    volumes:
      - shuffle-apps:/shuffle-apps
      - shuffle-files:/shuffle-files

    networks:
      - soar-backend

    depends_on:
      - shuffle-database

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'

  shuffle-frontend:
    image: ghcr.io/shuffle/shuffle-frontend:1.4.0
    container_name: soar-shuffle-frontend
    hostname: shuffle-frontend
    restart: unless-stopped

    ports:
      - "3001:3000"

    environment:
      - BACKEND_HOSTNAME=shuffle-backend

    networks:
      - soar-frontend

    depends_on:
      - shuffle-backend

    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'

  shuffle-orborus:
    image: ghcr.io/shuffle/shuffle-orborus:1.4.0
    container_name: soar-shuffle-orborus
    hostname: shuffle-orborus
    restart: unless-stopped

    environment:
      - SHUFFLE_APP_SDK_VERSION=1.3.0
      - SHUFFLE_WORKER_VERSION=1.4.0
      - ORG_ID=Org_${ORG_ID:-default}
      - ENVIRONMENT_NAME=Shuffle
      - BASE_URL=http://shuffle-backend:5001
      - DOCKER_API_VERSION=1.40
      - SHUFFLE_BASE_IMAGE_NAME=frikky
      - SHUFFLE_BASE_IMAGE_REGISTRY=ghcr.io
      - SHUFFLE_BASE_IMAGE_TAG_SUFFIX="-1.4.0"
      - HTTP_PROXY=
      - HTTPS_PROXY=
      - SHUFFLE_PASS_WORKER_PROXY=False
      - SHUFFLE_ORBORUS_EXECUTION_TIMEOUT=600

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

    networks:
      - soar-backend

    depends_on:
      - shuffle-backend

    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'

  shuffle-database:
    image: frikky/shuffle:app_sdk
    container_name: soar-shuffle-database
    hostname: shuffle-database
    restart: unless-stopped

    ports:
      - "8000:8000"

    environment:
      - SHUFFLE_ELASTIC=true

    volumes:
      - shuffle-database:/etc/shuffle

    networks:
      - soar-backend

    command: ["-database"]

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # ============================================================================
  # OPENSEARCH (for Shuffle)
  # ============================================================================
  opensearch:
    image: opensearchproject/opensearch:2.11.1
    container_name: soar-opensearch
    hostname: opensearch
    restart: unless-stopped

    ports:
      - "9201:9200"
      - "9601:9600"

    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
      - DISABLE_SECURITY_PLUGIN=true
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD=${OPENSEARCH_PASSWORD:-Admin123!@#}

    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536

    volumes:
      - opensearch-data:/usr/share/opensearch/data

    networks:
      - soar-backend

    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'

# ==============================================================================
# NETWORKS
# ==============================================================================
networks:
  soar-backend:
    driver: bridge
    ipam:
      config:
        - subnet: ${SOAR_BACKEND_SUBNET:-172.26.0.0/24}

  soar-frontend:
    driver: bridge
    ipam:
      config:
        - subnet: ${SOAR_FRONTEND_SUBNET:-172.27.0.0/24}

# ==============================================================================
# VOLUMES
# ==============================================================================
volumes:
  cassandra-data:
    driver: local
  minio-data:
    driver: local
  thehive-data:
    driver: local
  thehive-index:
    driver: local
  cortex-data:
    driver: local
  cortex-jobs:
    driver: local
  shuffle-apps:
    driver: local
  shuffle-files:
    driver: local
  shuffle-database:
    driver: local
  opensearch-data:
    driver: local

# ==============================================================================
# DEPLOYMENT NOTES
# ==============================================================================
#
# PREREQUISITES:
# 1. Set OPENSEARCH_PASSWORD in .env file
# 2. Set MINIO credentials in .env file
# 3. Ensure adequate system resources (min 8GB RAM, 4 CPU cores)
# 4. Windows: Docker Desktop with WSL2 backend enabled
#
# FIRST-TIME SETUP:
# 1. Start stack: docker-compose -f phase2-soar-stack.yml up -d
# 2. Wait 5 minutes for all services to initialize
# 3. Create MinIO bucket: mc alias set myminio http://localhost:9000 minioadmin minioadmin123
#                          mc mb myminio/thehive
# 4. Access TheHive: http://localhost:9010 (default: admin@thehive.local / secret)
# 5. Access Cortex: http://localhost:9011 (create admin user on first access)
# 6. Access Shuffle: http://localhost:3001 (create admin user on first access)
#
# INTEGRATION:
# - TheHive <-> Cortex: Configure Cortex URL in TheHive settings
# - Shuffle <-> TheHive: Use TheHive API key in Shuffle workflows
# - SIEM -> TheHive: Configure webhook alerts in Wazuh
#
# RESOURCE REQUIREMENTS:
# - Total RAM: ~8-10GB
# - Total CPU: ~8 cores recommended
# - Disk: ~20GB for data and logs
#
# PORT MAPPING:
# - 9000: MinIO API
# - 9001: MinIO Console
# - 9010: TheHive Web UI
# - 9011: Cortex Web UI
# - 3001: Shuffle Web UI
# - 5001: Shuffle Backend API
# - 9042: Cassandra CQL
# - 9201: OpenSearch HTTP
#
# ==============================================================================
